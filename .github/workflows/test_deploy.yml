name: Test and Deploy

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DATABASE_PASSWORD: postgres
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Echo github
        run: |
          echo 'github.ref' ${{ github.ref }}
          echo 'github.ref_name' ${{ github.ref_name }}
          echo 'github.head_ref' ${{ github.head_ref }}
          echo 'github.base_ref' ${{ github.base_ref }}

          echo 'github.workspace' ${{ github.workspace }}
          echo 'github.event_name' ${{ github.event_name }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.6

      - name: After set up Ruby
        run: |
          ruby --version
          bundler --version

      - name: Gem cache
        uses: actions/cache@v3
        id: cache-gems
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: After gem cache
        run: |
          echo "${{ steps.cache-gems.outputs.cache-hit }}"

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run Tests
        run: |
          bundle exec rspec

  rubocop:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Echo github
        run: |
          echo 'github.ref' ${{ github.ref }}
          echo 'github.ref_name' ${{ github.ref_name }}
          echo 'github.head_ref' ${{ github.head_ref }}
          echo 'github.base_ref' ${{ github.base_ref }}

          echo 'github.workspace' ${{ github.workspace }}
          echo 'github.event_name' ${{ github.event_name }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.6

      - name: Gem cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Check code
        run: |
          bundle exec rubocop

  deploy:
    name: Deploy app to AWS
    needs:
      - rspec
      - rubocop
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Echo github
        run: |
          echo 'github.ref' ${{ github.ref }}
          echo 'github.ref_name' ${{ github.ref_name }}
          echo 'github.head_ref' ${{ github.head_ref }}
          echo 'github.base_ref' ${{ github.base_ref }}

          echo 'github.workspace' ${{ github.workspace }}
          echo 'github.event_name' ${{ github.event_name }}

      - name: Install SSH key
        run: |
          mkdir -p -m 700 ~/.ssh
          echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/rails-deploy-bastion-ssh-key
          chmod 600 ~/.ssh/rails-deploy-bastion-ssh-key

          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/rails-deploy-webapp-ssh-key
          chmod 600 ~/.ssh/rails-deploy-webapp-ssh-key

      - name: Deploy
        run: |
          ssh -i ~/.ssh/rails-deploy-webapp-ssh-key \
          -o StrictHostKeyChecking=no \
          -o ProxyCommand='ssh -i ~/.ssh/rails-deploy-bastion-ssh-key -o StrictHostKeyChecking=no ec2-user@${{ secrets.BASTION_HOST_NAME }} -W %h:%p' \
          webapp@${{ secrets.WEB01_HOST_NAME }} "cd rails-deploy &&
          git pull origin main &&
          ~/.rbenv/shims/bundle config --local deployment true &&
          ~/.rbenv/shims/bundle config --local without development:test &&
          ~/.rbenv/shims/bundle install &&
          RAILS_ENV=production ~/.rbenv/shims/bundle exec rails db:migrate &&
          ls -al &&
          pwd &&
          cat tmp/pids/server.pid"

          ssh -i ~/.ssh/rails-deploy-webapp-ssh-key \
          -o StrictHostKeyChecking=no \
          -o ProxyCommand='ssh -i ~/.ssh/rails-deploy-bastion-ssh-key -o StrictHostKeyChecking=no ec2-user@${{ secrets.BASTION_HOST_NAME }} -W %h:%p' \
          webapp@${{ secrets.WEB02_HOST_NAME }} "cd rails-deploy &&
          git pull origin main &&
          ~/.rbenv/shims/bundle config --local deployment true &&
          ~/.rbenv/shims/bundle config --local without development:test &&
          ~/.rbenv/shims/bundle install &&
          RAILS_ENV=production ~/.rbenv/shims/bundle exec rails db:migrate &&
          ls -al &&
          pwd &&
          cat tmp/pids/server.pid"
